# vim:syntax=config

Files {
	Keys      = "~/.pekwm/keys"
	Mouse     = "~/.pekwm/mouse"
	Menu      = "~/.pekwm/menu"
	AutoProps = "~/.pekwm/autoproperties"
	Theme     = "~/.pekwm/themes/carpet"
}

MoveResize {
	EdgeAttract   = "20"   # Snap against screen edge when this close.
	EdgeResist    = "20"   # Move window this far before window actually moves form edge.
	WindowAttract = "20"   # Snap against other windows when this close.
	WindowResist  = "20"   # Move from win this far before window actually moves.

	OpaqueMove    = "True" # Show contents while dragging...
	OpaqueResize  = "True" # ... and resizing.
}

Screen {
	Workspaces       = "8"
	WorkspacesPerRow = "4"

	ShowFrameList    = "True"    # Show list of frames when using {Next,Prev}Frame*
	ShowStatusWindow = "True"    # Show size/position when moving or resizing.
	ShowClientID     = "False"   # Display client ID in window title.
	ShowWorkspaceIndicator = "0" # Show indicator for n ms after switching workspace
	PlaceNew = "True"            # Use rules in "Placement" section (otherwise it just opens in top-left)
	FocusNew = "True"            # New windows should be focused when they pop up.
	TrimTitle = ".."             # Trim long titles with this
	EdgeIndent = "False"         # Margin for screen edge.
	EdgeSize = "0 0 0 0"         # Margin size; top bottom left right.
	DoubleClickTime = "250"      # MS betwee clicks to be counted as double click.
	PixmapCacheSize = "20"       # Amount of unused pixmaps to store in cache.

	Placement {
		# CenteredOnParent places transient windows at center of their parent
		# window.
		#
		# Smart tries to place windows where no other window is present
		Model = "CenteredOnParent Smart"

		# Describes how pekwm computes where to place a new window in smart mode.
		Smart {
			Row = "True"         # Whether to use row or column placement, if true, uses row.
			TopToBottom = "True" # If false, the window is placed starting from the bottom.
			LeftToRight = "True" # If false, the window is placed starting from the right.
			OffsetX = "0"        # Pixels to leave between new and old windows and screen edges.
			OffsetY = "0"        # Pixels to leave between new and old windows and screen edges.
		}
	}

	# How pekwm should handle similar client names. Pekwm can add unique number
	# identifiers to clients that have the same title so that instead of
	# "terminal" and "terminal", you would end up with something like "terminal"
	# and "terminal [2]".
	UniqueNames  {
		SetUnique = "False"; # Enable this feature.
		Pre = " ";           # String to place before the unique client number.
		Post = "#";          # String to place after the unique client number.
	}
}

Menu {
	DisplayIcons = "False"

	# Mouse events for the menus; possible values are ButtonPress,
	# ButtonRelease, DoubleClick, and Motion.
	Select = "Motion"      # Select a meny entry.
	Enter  = "Motion"      # Enter a submenu.
	Exec   = "ButtonPress" # Execute an entry.
}

Harbour {
	Placement = "Right"         # Where to place it. Left, Right, Top, or Bottom.
	Orientation = "BottomToTop" # Expand in this direction. TopToBottom, BottomToTop, RightToLeft, LeftToRight.
	OnTop = "False"             # Whether or not the harbour is "always on top"

	# Controls whether maximized clients will cover the harbour (true), or if
	# they will stop at the edge of the harbour (false).
	MaximizeOver = "True"

	# When RandR or Xinerama is on, decides on what head the harbour resides on.
	# Integer is the head number.
	Head = "0"

	DockApp {
		# Controls the minimum size of dockapp clients. If a dockapp client is
		# smaller than the minimum, it gets resized up to the SideMin value. Integer
		# is a number of pixels.
		SideMin = "24"

		# Controls the maximum size of dockapp clients. If a dockapp client is
		# larger than the maximum, it gets resized down to the SideMax value.
		# Integer is a number of pixels.
		SideMax = "0"
	}
}
